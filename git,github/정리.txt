l8===================================git===================================
-CLI,GUI
1.CLI : Command Line Interface(명령줄을 입력하는 방식)
2.GUI : Graphical User Interface(그래픽 요소를 활용한 인터페이스)

------------------------------git설정------------------------------
git config --global user.name "이름" = 이름설정(이름적는 부분빼면 자신이름 확인가능)
git config --global user.email "이메일" = 이메일설정(이메일 적는부분 빼면 자신이메일 확인가능)

git config --global init.defaultBranch main = 브랜치명 변경

git init = git가 프로젝트를 관리하는 파일생성(숨김파일)
git status = 현재 폴더에서 폴더의 상황을git의 관점으로 보여줌
git diff = 현재 폴더의 변경상황을 더욱 자세하게 보여줌
j = 아래스크롤
k = 위스크롤
:q = 닫기


------------------------------특정파일을 배제하기------------------------------
.gitignore = 깃의 블랙리스트 즉 배제할파일 설정가능(비밀번호 또는 중요한 코드를 배제시킬 때 사용가능)

1.파일이름 = git에서 특정파일을 배제시킬 때 사용
2.file.파일이름 = 모든 특정파일배제
3./file.파일이름 = 최상위 폴더의 파일 배제
4.*.파일이름 = 파일과 관련된 모든 확장자파일 배제
5.!not_ignore_this.파일이름 = 무시안할 파일
6.파일이름 = 파일이름 또는 폴더의 그 내용
7.파일이름/ = 폴더의 이름과 그내용들 
8.폴더이름/파일이름 = 특정파일 배제
9.폴더이름/*.파일이름 = 특정파일 배제
10.폴더이름/**/파일이름 = 안쪽파일 배제

------------------------------파일담기------------------------------
git add 파일이름 = 파일 하나 담기
git add . = 모든 파일 담기

git commit = 저장시작
i = 입력시작
ESC = 입력종료
:q = 저장 없이 종료
:q! = 저장 없이 강제 종료
:wq = 저장하고 종료
k = 위로 스크롤
j = 아래로 스크롤

git commit -m "커밋 메세지" = 저장 편한버전

-파일을 담고 저장하는걸 한번에 다하는법-
git comit -am "커밋 메세지" | 새로 추가된 파일없을시 사용가능

git log = 로그확인

------------------------------기록 되돌리기------------------------------
-Reset = 원래행적은 지우고 되돌릴 기록까지 되돌린다
-Revert = 변화를 거꾸로 수행하여 되돌릴 파일을 복사함

git reset --hard 돌아갈 커밋 태그 = Reset방식
-Reset로 지운기록 다시 복구하기
1.복사해놓은 git파일과 되돌아간 git파일과 바꾸기
2.git reset --hard(커밋 태크를 적지않으면 내가속해있는 상태로 되돌아감)

git revert 돌아갈 커밋 태그 = Revert방식
-Revert로 기록다시 복구하기
1. git revert(겹치는 파일이 있을시에 충돌일어남)
2.git rm 파일이름 = 파일삭제(겹치는 파일이 있을시에)
3.git revert --commit

-커밋 안하고 revert하기
git revert --no-commit 돌아갈 커밋 태그	

------------------------------여러Branch만들기------------------------------
git branch 브랜치명 = 브랜치생성
git branch = 브랜치 목록확인
git branch -d 브랜치명 = 브랜치삭제
git branch -D 브랜치명 = 브랜치 강제삭제
git branch -m 기존 브랜치명 변경할 브랜치명 = 브랜치명 수정
git switch 브랜치명 = 브랜치이동

git log --all --decorate --oneline --graph = 여러브랜치 내역보기
